{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App.svelte","../../node_modules/svelte/store/index.mjs","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let config\r\n\r\n\tlet settings = false\r\n\r\n\tlet gif = 1\r\n\r\n\tlet d = new Date()\r\n\t$: hours = twoDigits(d.getHours() % 12 === 0 ? 12 : d.getHours() % 12)\r\n\t$: minutes = twoDigits(d.getMinutes())\r\n\t$: date = d.toLocaleDateString('en', {\r\n\t\tweekday: 'long',\r\n\t\tyear: 'numeric',\r\n\t\tmonth: 'long',\r\n\t\tday: 'numeric',\r\n\t})\r\n\t$: greeting =\r\n\t\td.getHours() < 2\r\n\t\t\t? 'night'\r\n\t\t\t: d.getHours() < 12\r\n\t\t\t? 'morning'\r\n\t\t\t: d.getHours() < 18\r\n\t\t\t? 'afternoon'\r\n\t\t\t: d.getHours() < 22\r\n\t\t\t? 'evening'\r\n\t\t\t: 'night'\r\n\r\n\tlet weather\r\n\tlet weatherClass = 'none'\r\n\tlet temperature = 0\r\n\r\n\tconst timeInterval = setInterval(() => {\r\n\t\td = new Date()\r\n\t}, 1000)\r\n\r\n\tconst weatherInterval = setInterval(() => {\r\n\t\tupdateWeather()\r\n\t}, 300000)\r\n\r\n\tconfig.subscribe((value) => {\r\n\t\tupdateWeather()\r\n\t})\r\n\r\n\tasync function updateWeather() {\r\n\t\tconst res = await fetch(\r\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${$config.location}&units=${$config.units}&appid=${$config.apiKey}`\r\n\t\t)\r\n\t\tif (!res.ok) {\r\n\t\t\tconsole.log(res)\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'Your Openweathermap API key is probably missing or invalid.'\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tweather = await res.json()\r\n\t\tconsole.log(weather)\r\n\t\ttemperature = Math.round(weather.main.temp)\r\n\t\tif (weather.weather[0].main === 'Clear') {\r\n\t\t\tlet time = Math.floor(d / 1000)\r\n\t\t\tif (time < weather.sys.sunrise || time > weather.sys.sunset) {\r\n\t\t\t\tweatherClass = 'moon'\r\n\t\t\t} else {\r\n\t\t\t\tweatherClass = 'sun'\r\n\t\t\t}\r\n\t\t} else if (\r\n\t\t\tweather.weather[0].main === 'Rain' ||\r\n\t\t\tweather.weather[0].main === 'Drizzle' ||\r\n\t\t\tweather.weather[0].main === 'Thunderstorm'\r\n\t\t) {\r\n\t\t\tweatherClass = 'rain'\r\n\t\t} else if (weather.weather[0].main === 'Snow') {\r\n\t\t\tweatherClass = 'snow'\r\n\t\t} else {\r\n\t\t\tweatherClass = 'cloud'\r\n\t\t}\r\n\t}\r\n\r\n\tfunction twoDigits(n) {\r\n\t\treturn n < 10 ? '0' + n : n\r\n\t}\r\n\r\n\tfunction handleImageUpload(event) {\r\n\t\tconst file = event.target.files[0];\r\n\t\tif (!file) return;\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = (e) => {\r\n\t\t\t$config.backgroundImage = e.target.result;\r\n\t\t};\r\n\t\treader.readAsDataURL(file);\r\n\t}\r\n\r\n\tfunction removeBackgroundImage() {\r\n\t\t$config.backgroundImage = '';\r\n\t\t$config.backgroundBlur = 0;\r\n\t}\r\n\r\n\tlet showLinks = false;\r\n\r\n\tfunction toggleLinks() {\r\n\t\tif (showLinks) {\r\n\t\t\tshowLinks = false;\r\n\t\t} else {\r\n\t\t\tshowLinks = true;\r\n\t\t\tsettings = false;\r\n\t\t}\r\n\t}\r\n\tfunction toggleSettings() {\r\n\t\tif (settings) {\r\n\t\t\tsettings = false;\r\n\t\t} else {\r\n\t\t\tsettings = true;\r\n\t\t\tshowLinks = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getAllLinks() {\r\n\t\t// Flatten all columns into a single array with column and index info\r\n\t\treturn $config.links.flatMap((col, colIdx) => col.map((link, linkIdx) => ({...link, colIdx, linkIdx})));\r\n\t}\r\n\tfunction addLinkGlobal() {\r\n\t\t// Add to the first column by default\r\n\t\t$config.links[0] = [\r\n\t\t\t...$config.links[0],\r\n\t\t\t{ name: '', url: '' }\r\n\t\t];\r\n\t}\r\n\r\n\tlet searchQuery = '';\r\n\r\n\tconst searchEngines = {\r\n\t\t'!g': 'https://www.google.com/search?q=',\r\n\t\t'!ddg': 'https://duckduckgo.com/?q=',\r\n\t\t'!brave': 'https://search.brave.com/search?q=',\r\n\t};\r\n\r\n\tfunction handleSearchKeydown(e) {\r\n\t\tif (e.key === 'Enter' && searchQuery.trim()) {\r\n\t\t\tlet url = '';\r\n\t\t\tconst match = searchQuery.match(/^!(g|ddg|brave)\\s+(.*)$/i);\r\n\t\t\tif (match) {\r\n\t\t\t\tconst tag = `!${match[1].toLowerCase()}`;\r\n\t\t\t\tconst query = encodeURIComponent(match[2]);\r\n\t\t\t\turl = searchEngines[tag] + query;\r\n\t\t\t} else {\r\n\t\t\t\turl = searchEngines['!g'] + encodeURIComponent(searchQuery);\r\n\t\t\t}\r\n\t\t\twindow.open(url, '_blank');\r\n\t\t}\r\n\t}\r\n\r\n\tlet searchBarVisible = false;\r\n\r\n\tfunction handleGlobalKeydown(e) {\r\n\t\tif (e.key === '/') {\r\n\t\t\te.preventDefault();\r\n\t\t\tsearchBarVisible = true;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst input = document.querySelector('.search-input');\r\n\t\t\t\tif (input) input.focus();\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\twindow.addEventListener('keydown', handleGlobalKeydown);\r\n\t\treturn () => window.removeEventListener('keydown', handleGlobalKeydown);\r\n\t});\r\n</script>\r\n\r\n<main>\r\n\t{#if $config.backgroundImage}\r\n\t\t<div id=\"custom-bg\" style=\"background-image: url('{$config.backgroundImage}'); filter: blur({$config.backgroundBlur}px);\"></div>\r\n\t{/if}\r\n\r\n\t{#if !settings && !showLinks}\r\n\t\t<div class=\"search-bar-container\" on:mouseenter={() => searchBarVisible = true} on:mouseleave={() => searchBarVisible = false}>\r\n\t\t\t<div class=\"search-bar content-box {$config.flavour} {searchBarVisible ? 'visible' : ''}\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"!g, !ddg, !brave...\"\r\n\t\t\t\t\tbind:value={searchQuery}\r\n\t\t\t\t\ton:keydown={handleSearchKeydown}\r\n\t\t\t\t\tclass=\"search-input\"\r\n\t\t\t\t\tstyle=\"text-align: center;\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{/if}\r\n\r\n\t{#if showLinks}\r\n\t\t<div id=\"box\" class=\"content-box {$config.flavour} links-mode\">\r\n\t\t\t<div id=\"links-panel\">\r\n\t\t\t\t<h2 id=\"links-header\">Links</h2>\r\n\t\t\t\t<div class=\"links-list\">\r\n\t\t\t\t\t{#each getAllLinks() as linkObj}\r\n\t\t\t\t\t\t<div class=\"link-edit-row\">\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Name\" bind:value={$config.links[linkObj.colIdx][linkObj.linkIdx].name} />\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"URL\" bind:value={$config.links[linkObj.colIdx][linkObj.linkIdx].url} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t{/each}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<div id=\"content\">\r\n\t\t\t<div id=\"image-container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tid=\"image\"\r\n\t\t\t\t\tsrc={'gifs/1.gif'}\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"time\">{hours}-{minutes}</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"box\" class=\"content-box {$config.flavour}\">\r\n\t\t\t\t{#if settings}\r\n\t\t\t\t\t<div id=\"settings\">\r\n\t\t\t\t\t\t<h2 id=\"settings-header\">Settings</h2>\r\n\t\t\t\t\t\t<div class=\"label\">Name</div>\r\n\t\t\t\t\t\t<input type=\"text\" bind:value={$config.name} />\r\n\t\t\t\t\t\t<div class=\"label\">Location</div>\r\n\t\t\t\t\t\t<input type=\"text\" bind:value={$config.location} />\r\n\t\t\t\t\t\t<div class=\"label\">Openweathermap API key</div>\r\n\t\t\t\t\t\t<input type=\"text\" bind:value={$config.apiKey} />\r\n\t\t\t\t\t\t<div class=\"label\">Units</div>\r\n\t\t\t\t\t\t<select bind:value={$config.units}>\r\n\t\t\t\t\t\t\t<option value=\"metric\">metric</option>\r\n\t\t\t\t\t\t\t<option value=\"imperial\">imperial</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div class=\"label\">Flavour</div>\r\n\t\t\t\t\t\t<select bind:value={$config.flavour}>\r\n\t\t\t\t\t\t\t<option value=\"mocha\">Mocha</option>\r\n\t\t\t\t\t\t\t<option value=\"frappe\">Frappé</option>\r\n\t\t\t\t\t\t\t<option value=\"macchiato\">Macchiato</option>\r\n\t\t\t\t\t\t\t<option value=\"latte\">Latte</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div class=\"label\">Background Image</div>\r\n\t\t\t\t\t\t<div class=\"bg-row\">\r\n\t\t\t\t\t\t\t<label class=\"file-label\">\r\n\t\t\t\t\t\t\t\tChoose File\r\n\t\t\t\t\t\t\t\t<input type=\"file\" accept=\"image/*\" on:change={handleImageUpload} />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<button class=\"remove-bg\" on:click={removeBackgroundImage} title=\"Remove background image\">✕</button>\r\n\t\t\t\t\t\t\t{#if $config.backgroundImage}\r\n\t\t\t\t\t\t\t\t<span class=\"label\" style=\"margin: 0 0.5rem 0 1.5rem;\">Blur</span>\r\n\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"20\" bind:value={$config.backgroundBlur} style=\"width: 120px; margin-right: 0.5rem;\" />\r\n\t\t\t\t\t\t\t\t<span>{$config.backgroundBlur}px</span>\r\n\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<div id=\"main-content\">\r\n\t\t\t\t\t\t<div id=\"heading-container\">\r\n\t\t\t\t\t\t\t<div id=\"heading\">\r\n\t\t\t\t\t\t\t\t<h1 id=\"greeting\">\r\n\t\t\t\t\t\t\t\t\tGood {greeting}{$config.name ? ', ' + $config.name : ''}.\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h2 id=\"date\">Today is {date}.</h2>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div id=\"weather-container\" on:click={updateWeather}>\r\n\t\t\t\t\t\t\t\t{#if weather}\r\n\t\t\t\t\t\t\t\t\t<div id=\"temperature\">{temperature}°</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"weather-icon {weatherClass}\" />\r\n\t\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"links\">\r\n\t\t\t\t\t\t\t{#each $config.links as column}\r\n\t\t\t\t\t\t\t\t<div class=\"link-column\">\r\n\t\t\t\t\t\t\t\t\t{#each column as link}\r\n\t\t\t\t\t\t\t\t\t\t<a href={link.url}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"arrow\">></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"text\">{link.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/if}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{/if}\r\n\t<div id=\"corner\">\r\n\t\t<button id=\"links-button\" on:click={toggleLinks} class:active={showLinks}>\r\n\t\t\tlinks\r\n\t\t</button>\r\n\t\t<button id=\"settings-button\" on:click={toggleSettings} class:active={settings}>\r\n\t\t\tsettings\r\n\t\t</button>\r\n\t\t<a href=\"https://github.com/OrynVail/Startlight\" id=\"version\">\r\n\t\t\t<img src=\"/favicon.svg\" alt=\"Version\"/>\r\n\t\t</a>\r\n\t</div>\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n\t#content {\r\n\t\tdisplay: flex;\r\n\t\tanimation: appear 0.3s ease-out forwards;\r\n\t\tposition: relative;\r\n\t\tz-index: 1;\r\n\t}\r\n\t#image-container {\r\n\t\twidth: 16rem;\r\n\t\theight: inherit;\r\n\t\tposition: relative;\r\n\t\tmargin-right: 3rem;\r\n\t\toverflow: hidden;\r\n\t\tborder-radius: 2rem;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\t#image {\r\n\t\tposition: absolute;\r\n\t\theight: inherit;\r\n\t\tmax-height: 100%;\r\n\t}\r\n\t#image:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\t#time {\r\n\t\twidth: 5rem;\r\n\t\tpadding: 1rem;\r\n\t\tbackground: hsla(0, 0.00%, 0.00%, 0.60);\r\n\t\tborder-radius: 1rem;\r\n\t\tanimation: time-appear 0.3s ease-out 0.2s forwards;\r\n\t\tfont-size: 3rem;\r\n\t\tfont-family: Cascadia Code;\r\n\t\toverflow-wrap: break-word;\r\n\t\ttext-align: center;\r\n\t\tcolor: white;\r\n\t\tmix-blend-mode: overlay;\r\n\t\ttransform: scale(0);\r\n\t\tbackdrop-filter: blur(4px);\r\n\t}\r\n\t#box {\r\n\t\tpadding: 3rem;\r\n\t\toverflow: hidden;\r\n\t\ttransition: width 0.2s ease;\r\n\t}\r\n\t#heading-container {\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t}\r\n\t#weather-container {\r\n\t\tposition: absolute;\r\n\t\ttop: 3rem;\r\n\t\tright: 3rem;\r\n\t\ttext-align: right;\r\n\t\twidth: 7rem;\r\n\t\theight: min-content;\r\n\t\tmargin-left: 4rem;\r\n\t\topacity: 0;\r\n\t\tanimation: weather-appear 0.3s ease-out 0.2s forwards;\r\n\t}\r\n\t#weather-container:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\t#temperature {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 0.2rem 0 0 0;\r\n\t\tfont-size: 1.5rem;\r\n\t\tvertical-align: top;\r\n\t}\r\n\th1 {\r\n\t\tmargin: 0;\r\n\t\tfont: inherit;\r\n\t\tfont-size: 2rem;\r\n\t}\r\n\t#greeting {\r\n\t\tmargin-bottom: 2rem;\r\n\t\tmargin-right: 12rem;\r\n\t\topacity: 0;\r\n\t\tanimation: text-appear 0.3s ease-out 0.2s forwards;\r\n\t}\r\n\t#settings-header {\r\n\t\tmargin-bottom: 1.5rem;\r\n\t}\r\n\th2 {\r\n\t\tmargin: 0;\r\n\t\tfont: inherit;\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n\t#date {\r\n\t\tmargin-bottom: 3.5rem;\r\n\t\topacity: 0;\r\n\t\tanimation: text-appear 0.3s ease-out 0.225s forwards;\r\n\t}\r\n\t.label {\r\n\t\tmargin: 1rem 0 0.25rem 0;\r\n\t\tfont: inherit;\r\n\t\tfont-size: 1rem;\r\n\t}\r\n\t#links {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin: 0;\r\n\t\tgap: 3rem;\r\n\t}\r\n\t.link-column {\r\n\t\topacity: 0;\r\n\t\tanimation: text-appear 0.3s ease-out 0.25s forwards;\r\n\t}\r\n\tbutton {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tfont: inherit;\r\n\t\tpadding: none;\r\n\t\tcolor: var(--text-dark-color);\r\n\t\ttransition: 0.2s ease;\r\n\t}\r\n\ta {\r\n\t\tdisplay: inline-block;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: var(--text-dark-color);\r\n\t\ttransition: 0.2s ease;\r\n\t\tmargin-bottom: 2rem;\r\n\t}\r\n\ta:last-of-type {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t.arrow {\r\n\t\tdisplay: inline-block;\r\n\t\ttransform: translate(-22px);\r\n\t\topacity: 0;\r\n\t\ttransition: 0.2s ease;\r\n\t}\r\n\t.text {\r\n\t\tdisplay: inline-block;\r\n\t\ttransform: translate(-22px);\r\n\t\ttransition: 0.2s ease;\r\n\t}\r\n\ta:hover,\r\n\tbutton:hover {\r\n\t\tcolor: var(--text-color);\r\n\t\tcursor: pointer;\r\n\t}\r\n\ta:hover .arrow {\r\n\t\ttransform: none;\r\n\t\topacity: 1;\r\n\t}\r\n\ta:hover .text {\r\n\t\ttransform: none;\r\n\t}\r\n\ta:active:hover,\r\n\tbutton:active:hover {\r\n\t\ttransform: scale(0.9);\r\n\t}\r\n\tselect,\r\n\tinput {\r\n\t\tbackground: var(--bg-color);\r\n\t\tborder: none;\r\n\t\tfont: inherit;\r\n\t\tcolor: inherit;\r\n\t\tpadding: 0.5rem;\r\n\t\tborder-radius: 0.5rem;\r\n\t\twidth: 100%;\r\n\t}\r\n\tselect {\r\n\t\tpadding: 0.5rem;\r\n\t}\r\n\t#settings {\r\n\t\twidth: 25rem;\r\n\t\tmax-height: 42rem;\r\n\t\tscrollbar-width: thin;\r\n\t\tscrollbar-color: #8880 #0000;\r\n\t}\r\n\t#settings::-webkit-scrollbar {\r\n\t\twidth: 6px;\r\n\t\tbackground: transparent;\r\n\t}\r\n\t#settings::-webkit-scrollbar-thumb {\r\n\t\tbackground: #888;\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\t#settings::-webkit-scrollbar-track {\r\n\t\tbackground: transparent;\r\n\t}\r\n\t.file-label {\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 0.5rem 1rem;\r\n\t\tbackground: var(--bg2-color);\r\n\t\tcolor: var(--text-color);\r\n\t\tborder-radius: 0.5rem;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 1rem;\r\n\t\tmargin-bottom: 0.5rem;\r\n\t\tposition: relative;\r\n\t}\r\n\t.file-label input[type=\"file\"] {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.remove-bg {\r\n\t\tbackground: none;\r\n\t\tborder: none;\r\n\t\tcolor: var(--text-color);\r\n\t\tfont-size: 1.2rem;\r\n\t\tcursor: pointer;\r\n\t\tpadding: 0 0.3rem;\r\n\t\tborder-radius: 0.3rem;\r\n\t\ttransition: background 0.2s;\r\n\t}\r\n\t.remove-bg:hover {\r\n\t\tbackground: var(--bg2-color);\r\n\t}\r\n\t#corner {\r\n\t\tposition: absolute;\r\n\t\tpadding: 1rem;\r\n\t\tbottom: 0;\r\n\t\tright: 0;\r\n\t\topacity: 0;\r\n\t\ttransition: 0.2s ease;\r\n\t}\r\n\t#corner:hover {\r\n\t\topacity: 1;\r\n\t}\r\n\t#version {\r\n\t\tmargin: 0;\r\n\t\tdisplay: inline-block;\r\n    \tvertical-align: middle;\r\n\t}\r\n\t#version img {\r\n\t\theight: 2.4em;\r\n\t\twidth: auto;\r\n\t\tmargin-left: 0.5rem;\r\n\t\topacity: 0.6;\r\n\t\ttransition: opacity 0.2s ease;\r\n\t}\r\n\t#version:hover img {\r\n\t\topacity: 1;\r\n\t}\r\n\t#custom-bg {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100vw;\r\n\t\theight: 100vh;\r\n\t\tz-index: 0;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t\tpointer-events: none;\r\n\t}\r\n\t#links-panel {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow-y: auto;\r\n\t\tpadding-bottom: 1rem;\r\n\t}\r\n\t#links-header {\r\n\t\tmargin-bottom: 1.5rem;\r\n\t\tfont-size: 2rem;\r\n\t\tletter-spacing: 0.04em;\r\n\t}\r\n\t.links-list {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 0.7rem;\r\n\t}\r\n\t.link-edit-row {\r\n\t\tdisplay: flex;\r\n\t\tgap: 0.7rem;\r\n\t\talign-items: center;\r\n\t}\r\n\t.link-edit-row input[type=\"text\"]:first-child {\r\n\t\tflex: 0 0 9.5rem;\r\n\t\tmax-width: 12rem;\r\n\t}\r\n\t.link-edit-row input[type=\"text\"]:last-child {\r\n\t\tflex: 0 0 30rem;\r\n\t\tmax-width: 33rem;\r\n\t}\r\n\t.link-edit-row input[type=\"text\"] {\r\n\t\tflex: 1 1 0;\r\n\t\tpadding: 0.4rem 0.7rem;\r\n\t\tborder-radius: 0.4rem;\r\n\t\tborder: none;\r\n\t\tbackground: var(--bg2-color);\r\n\t\tcolor: var(--text-color);\r\n\t\tfont-size: 1.1rem;\r\n\t\tbox-shadow: 0 1px 4px 0 rgba(0,0,0,0.04);\r\n\t}\r\n\t.add-link {\r\n\t\tmargin-top: 1.2rem;\r\n\t\tbackground: var(--bg2-color);\r\n\t\tcolor: var(--text-color);\r\n\t\tborder: none;\r\n\t\tborder-radius: 0.4rem;\r\n\t\tpadding: 0.5rem 1.2rem;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 1.1rem;\r\n\t\ttransition: background 0.2s;\r\n\t\tbox-shadow: 0 1px 4px 0 rgba(0,0,0,0.04);\r\n\t\talign-self: flex-start;\r\n\t}\r\n\t.add-link:hover {\r\n\t\tbackground: var(--text-dark-color);\r\n\t}\r\n\t.links-mode {\r\n\t\twidth: 48rem !important;\r\n\t\tmin-height: 44rem;\r\n\t\tmax-height: 44rem;\r\n\t\tpadding: 2.5rem 2.5rem 2rem 2.5rem;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tanimation: appear 0.3s ease-out forwards;\r\n\t}\r\n\t.bg-row {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: 0.5rem;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\t.search-bar-container {\r\n\t\tposition: absolute;\r\n\t\tbottom: calc(50% - 16rem - 3rem);\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tz-index: 2;\r\n\t\twidth: calc(14rem + 2rem + 44rem);\r\n\t\tmax-width: 100vw;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\t.search-bar {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tmargin: 0 auto;\r\n\t\twidth: 100%;\r\n\t\tpadding: 0.5rem 2.5rem;\r\n\t\tbox-sizing: border-box;\r\n\t\topacity: 0;\r\n\t\ttransition: opacity 0.4s ease;\r\n\t\tpointer-events: none;\r\n\t}\r\n\t.search-bar.visible,\r\n\t.search-bar-container:hover .search-bar {\r\n\t\topacity: 1;\r\n\t\tpointer-events: auto;\r\n\t}\r\n\t.search-input {\r\n\t\twidth: 100%;\r\n\t\tfont-size: 1.1rem;\r\n\t\tbackground: transparent;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t\tcolor: var(--text-color);\r\n\t\tfont-family: inherit;\r\n\t\tpadding: 0.4rem 1.2rem;\r\n\t\tborder-radius: 0.7rem;\r\n\t\ttext-align: center;\r\n\t}\r\n</style>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import App from './App.svelte'\r\nimport { writable } from 'svelte/store'\r\n\r\nconst defaultConfig = {\r\n\tname: 'Oryn',\r\n\tlocation: 'New Delhi',\r\n\tunits: 'metric',\r\n\tapiKey: '',\r\n\tflavour: 'mocha',\r\n\tbackgroundImage: '',\r\n\tbackgroundBlur: 0,\r\n\tlinks: [\r\n\t\t[\r\n\t\t\t{ name: 'Gmail', url: 'https://mail.google.com' },\r\n\t\t\t{ name: 'Calendar', url: 'https://calendar.google.com' },\r\n\t\t\t{ name: 'Drive', url: 'https://drive.google.com' },\r\n\t\t\t{ name: 'Docs', url: 'https://docs.google.com' },\r\n\t\t],\r\n\t\t[\r\n\t\t\t{ name: 'GitHub', url: 'https://github.com' },\r\n\t\t\t{ name: 'NixOS', url: 'https://search.nixos.org/packages' },\r\n\t\t\t{ name: 'ChatGPT', url: 'https://chatgpt.com' },\r\n\t\t\t{ name: 'News', url: 'https://hacker.news' },\r\n\t\t],\r\n\t\t[\r\n\t\t\t{ name: 'YouTube', url: 'https://youtube.com' },\r\n\t\t\t{ name: 'Twitch', url: 'https://twitch.tv' },\r\n\t\t\t{ name: 'Reddit', url: 'https://reddit.com' },\r\n\t\t\t{ name: 'X', url: 'http://x.com' },\r\n\t\t],\r\n\t],\r\n}\r\nconst storedConfig = JSON.parse(localStorage.getItem('config')) ?? defaultConfig\r\nconst config = writable(storedConfig)\r\nconfig.subscribe((value) => {\r\n\tlocalStorage.setItem('config', JSON.stringify(value))\r\n\tdocument.body.className = value.flavour\r\n})\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tconfig: config,\r\n\t},\r\n})\r\n\r\nexport default app\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","set_store_value","store","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","div","backgroundImage","backgroundBlur","div0","div0_class_value","flavour","div1","create_if_block_1","element_src","url","href","img","div2","div2_class_value","div3","h2","t2_value","create_if_block_3","each_value_1","links","div4","h1","t2","if_block","create_if_block_2","units","call","select0","select1","div7","input0","input1","location","input2","apiKey","option0","option1","option2","option3","option4","option5","div5","div6","label","input3","button","a_href_value","span0","span1","br","t3_value","t3","colIdx","linkIdx","if_block0","create_if_block_5","if_block1","create_if_block_4","create_if_block","main","button0","button1","twoDigits","n","unsub","subscribe","unsubscribe","config","$$props","weather","settings","Date","weatherClass","temperature","updateWeather","res","fetch","$config","ok","console","log","warn","json","Math","round","temp","time","floor","sys","sunrise","sunset","$$invalidate","setInterval","showLinks","searchQuery","searchEngines","searchBarVisible","handleGlobalKeydown","e","preventDefault","setTimeout","focus","window","hours","getHours","minutes","getMinutes","date","toLocaleDateString","weekday","year","month","day","greeting","file","files","reader","FileReader","onload","result","readAsDataURL","flatMap","col","link","trim","match","tag","toLowerCase","query","encodeURIComponent","open","this","linkObj","subscriber_queue","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","writable","JSON","parse","localStorage","getItem","setItem","stringify","body","className","$destroy","destroy_component","$on","type","index","indexOf","splice","$set","obj","$$set","keys"],"mappings":"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"}